{"version":3,"sources":["api/API.ts","utils/util.ts","App.styles.ts","components/QuestionCard.tsx","App.tsx","index.tsx"],"names":["Difficulty","fetchQuestions","amount","difficulty","a","endpoint","fetch","json","data","results","map","question","answers","array","correct_answer","incorrect_answers","sort","Math","random","Wrapper","styled","div","p","mb","GlobalStyle","createGlobalStyle","QuestionCard","cb","questionNumber","totalQuestions","userAnswer","children","className","dangerouslySetInnerHTML","__html","v","idx","disabled","onClick","value","App","useState","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","startQuiz","HARD","length","undefined","e","answer","currentTarget","console","log","isCorrect","prev","answerObj","correct","correctAnswer","TOTAL_QUESTIONS","style","width","whiteSpace","position","bottom","direction","scrollWhen","delay","cursor","newWindow","window","open","location","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAaYA,E,yGAAAA,K,YAAAA,E,gBAAAA,E,aAAAA,M,KAML,I,IAAMC,EAAc,uCAAG,WAAOC,EAAgBC,GAAvB,iBAAAC,EAAA,6DACtBC,EADsB,6CAC2BH,EAD3B,mCAC4DC,EAD5D,2BAEFG,MAAMD,GAFJ,8BAEeE,OAFf,cAEtBC,EAFsB,yBAGrBA,EAAKC,QAAQC,KAAI,SAACC,GAAD,mBAAC,eAElBA,GAFiB,IAGpBC,SCzBqBC,EDyBD,CAACF,EAASG,gBAAX,mBAA8BH,EAASI,oBCxBvD,YAAIF,GAAOG,MAAK,kBAAIC,KAAKC,SAAS,SADjB,IAACL,MDmBG,2CAAH,wD,gBEbdM,EAAUC,IAAOC,IAAV,+LAIL,SAAAC,GAAC,OAAIA,EAAEC,GAAK,OAAS,WACjB,SAAAD,GAAC,OAAIA,EAAEC,GAAK,OAAS,OAClB,SAAAD,GAAC,OAAIA,EAAEC,GAAK,cAAgB,wBAC5B,SAAAD,GAAC,OAAIA,EAAEC,GAAK,OAAS,6CAG9BC,EAAcC,YAAH,mxB,OCqBTC,EAlBuB,SAAC,GAAD,IAAGf,EAAH,EAAGA,SAAUC,EAAb,EAAaA,QAASe,EAAtB,EAAsBA,GAAIC,EAA1B,EAA0BA,eAAgBC,EAA1C,EAA0CA,eAAgBC,EAA1D,EAA0DA,WAA1D,EAAsEC,SAAtE,OACpC,eAACZ,EAAD,CAASI,IAAE,EAAX,UACE,oBAAGS,UAAU,SAAb,uBACaJ,EADb,MACgCC,KAEhC,mBAAGG,UAAU,WAAWC,wBAAyB,CAACC,OAAQvB,KAC1D,8BACGC,EAAQF,KAAI,SAACyB,EAAEC,GAAH,OACX,8BACE,wBAAQJ,UAAaF,EAAa,WAAa,GAAIO,WAAYP,EAAYQ,QAASX,EAAIY,MAAOJ,EAA/F,SACE,sBAAMF,wBAAyB,CAACC,OAAQC,QAFlCC,YC+EHI,EA9FH,WAAO,IAAD,EACcC,oBAAS,GADvB,mBACTC,EADS,KACAC,EADA,OAEkBF,mBAA0B,IAF5C,mBAETG,EAFS,KAEEC,EAFF,OAGYJ,mBAAS,GAHrB,mBAGTK,EAHS,KAGDC,EAHC,OAIsBN,mBAAyB,IAJ/C,mBAITO,EAJS,KAIIC,EAJJ,OAKUR,mBAAS,GALnB,mBAKTS,EALS,KAKFC,EALE,OAMgBV,oBAAS,GANzB,mBAMTW,EANS,KAMCC,EAND,KAUVC,EAAS,uCAAG,4BAAAlD,EAAA,6DAChBiD,GAAY,GACZV,GAAW,GACXQ,EAAS,GACTF,EAAe,IACfF,EAAU,GALM,SAMQ9C,EAlBJ,GAkBoCD,EAAWuD,MANnD,OAMVX,EANU,OAOhBC,EAAaD,GACbD,GAAW,GARK,4CAAH,qDAwCf,OACE,qCACE,cAACnB,EAAD,IACA,sBAAKQ,UAAU,MAAf,UACE,eAACb,EAAD,WACE,oBAAIa,UAAU,eAAd,yBACEoB,GA1DY,KA0DAJ,EAAYQ,SACxB,wBAAQxB,UAAU,QAAQM,QAASgB,EAAnC,SAAgDV,EAAUY,OAAmB,WAAV,WAEnEJ,GAAY,oBAAGpB,UAAU,QAAb,oBAA6BkB,KAC1CR,GAAW,4CACVA,IAAYU,GACZ,cAAC,EAAD,CACExB,eAAgBkB,EAAS,EACzBjB,eAlEU,GAmEVlB,SAAUiC,EAAUE,GAAQnC,SAC5BC,QAASgC,EAAUE,GAAQlC,QAC3BkB,WAAYkB,EAAcA,EAAYF,QAAUW,EAChD9B,GAhDQ,SAAC+B,GACnB,IAAKN,EAAU,CACb,IAAMO,EAASD,EAAEE,cAAcrB,MAC/BsB,QAAQC,IAAIH,GACZ,IAAMI,EAAYnB,EAAUE,GAAQhC,iBAAmB6C,EACnDI,GACFZ,GAAS,SAAAa,GAAI,OAAIA,EAAO,KAE1B,IAAMC,EAA0B,CAC9BN,SACAO,QAASH,EACTpD,SAAUiC,EAAUE,GAAQnC,SAC5BwD,cAAevB,EAAUE,GAAQhC,gBAEnCmC,GAAe,SAAAe,GAAI,4BAAQA,GAAR,CAAcC,YAqC3BvB,IAAYU,GAAYJ,EAAYQ,SAAWV,EAAS,GAAgBsB,IAAXtB,GAC7D,wBAAQd,UAAU,OAAOM,QAnCd,WACfQ,EAxCgB,GAyClBC,GAAU,SAAAiB,GAAI,OAAIA,EAAO,KAEzBX,GAAY,IA+BN,qBAGJ,qBACEgB,MAAO,CACLC,MAAO,OACPC,WAAY,SACZC,SAAU,QACVC,OAAQ,IALZ,SAQE,cAAC,IAAD,CAASC,UAAU,OAAOC,WAAW,SAASC,MAAO,EAArD,SACE,sBAAMP,MAAO,CAACQ,OAAQ,WAAYvC,QAxClB,WACxB,IAAMwC,EAAYC,OAAOC,OACtBF,IACDA,EAAUG,SAASC,KAAO,6DAqCpB,gQC5FZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9cb3e726.chunk.js","sourcesContent":["import { shuffleArr } from '../utils/util'\n\nexport interface Question {\n  category: string\n  correct_answer: string\n  difficulty: string\n  incorrect_answers: string[]\n  question: string\n  type: string\n}\n\nexport type QuestionState = Question & { answers: string[] }\n\nexport enum Difficulty {\n  EASY = \"easy\",\n  MEDIUM = \"medium\",\n  HARD = \"hard\"\n}\n\nexport const fetchQuestions = async (amount: number, difficulty: Difficulty) => {\n  const endpoint = `https://opentdb.com/api.php?amount=${amount}&category=12&difficulty=${difficulty}&type=multiple`\n  const data = await (await fetch(endpoint)).json()\n  return data.results.map((question:Question): QuestionState => (\n    {\n      ...question,\n      answers: shuffleArr([question.correct_answer, ...question.incorrect_answers ]),\n    }\n  ))\n}","export const shuffleArr = (array: any[]) => {\n  return [...array].sort(()=>Math.random()-0.5)\n}","import styled, {createGlobalStyle} from 'styled-components'\n\ninterface WrapperProps {\n  mb?: boolean\n}\n\nexport const Wrapper = styled.div<WrapperProps>`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  min-height:${p => p.mb ? 'none' : '400px'};\n  margin-bottom: ${p => p.mb ? '40px' : '0'};\n  background-color: ${p => p.mb ? 'transparent' : 'rgb(240, 144, 184)'};\n  background-image: ${p => p.mb ? 'none' : 'linear-gradient(rgba(0,0,0,.6),#121212)'};\n`\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    height: 100%;\n    background-color: #121212;\n  }\n\n  * {\n    color: white;\n    font-family: 'RocknRoll One';\n  }\n\n  button {\n    border: 0;\n    height: 30px;\n    min-width: 300px; \n    padding: 0 30px;\n    cursor: pointer;\n    margin-bottom: 10px;\n    border-radius: 15px;\n    background-color: #1db954;\n  }\n\n  .disabled {\n    cursor: default;\n    background-color: #b3b3b3;\n  }\n\n  .question {\n    margin: 40px 0;\n    font-weight: bold;\n    text-align: center;\n  }\n\n  .green-border {\n    border-bottom: 3px solid #1db954;\n  }\n\n  /* h1 {\n    background-image: linear-gradient(#1db954, white);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  } */\n\n`","import React from 'react'\nimport { Wrapper } from '../App.styles'\n\nexport interface AnswerObject {\n  question: string\n  answer: string\n  correct: boolean\n  correctAnswer: string\n}\n\ninterface Props {\n  question: string\n  answers: string[]\n  cb: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n  userAnswer: AnswerObject | undefined\n  questionNumber: number\n  totalQuestions: number\n}\n\nconst QuestionCard: React.FC<Props> = ({ question, answers, cb, questionNumber, totalQuestions, userAnswer, children }) => (\n  <Wrapper mb>\n    <p className=\"number\">\n      Question: {questionNumber} / {totalQuestions}\n    </p>\n    <p className=\"question\" dangerouslySetInnerHTML={{__html: question}}/>\n    <div>\n      {answers.map((v,idx)=>(\n        <div key={idx}>\n          <button className={!!userAnswer ? 'disabled' : ''} disabled={!!userAnswer} onClick={cb} value={v}>\n            <span dangerouslySetInnerHTML={{__html: v}} />\n          </button>\n        </div>\n      ))}\n    </div>\n  </Wrapper>\n)\n\nexport default QuestionCard","import React, { useState } from 'react';\nimport Marquee from 'react-double-marquee';\n\nimport { fetchQuestions } from './api/API'\nimport { Difficulty, QuestionState } from './api/API'\n\nimport { GlobalStyle, Wrapper } from './App.styles'\n\nimport QuestionCard, { AnswerObject } from './components/QuestionCard'\n\nconst TOTAL_QUESTIONS = 10\n\nconst App = () => {\n  const [loading, setLoading] = useState(false)\n  const [questions, setQuestions] = useState<QuestionState[]>([])\n  const [number, setNumber] = useState(0)\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([])\n  const [score, setScore] = useState(0)\n  const [gameOver, setGameOver] = useState(true)\n\n  // console.log(fetchQuestions(TOTAL_QUESTIONS,Difficulty.HARD))\n\n  const startQuiz = async () => {\n    setGameOver(false)\n    setLoading(true)\n    setScore(0)\n    setUserAnswers([])\n    setNumber(0)\n    const questions = await fetchQuestions(TOTAL_QUESTIONS, Difficulty.HARD)\n    setQuestions(questions)\n    setLoading(false)\n  }\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value\n      console.log(answer)\n      const isCorrect = questions[number].correct_answer === answer\n      if (isCorrect) {\n        setScore(prev => prev + 1)\n      }\n      const answerObj: AnswerObject = {\n        answer,\n        correct: isCorrect,\n        question: questions[number].question,\n        correctAnswer: questions[number].correct_answer\n      }\n      setUserAnswers(prev => [...prev, answerObj])\n    }\n  }\n  const nextQuestion = () => {\n    if (number < TOTAL_QUESTIONS) {\n      setNumber(prev => prev + 1)\n    } else {\n      setGameOver(true)\n    }\n  }\n  const handleFooterClick = () => {\n    const newWindow = window.open()\n    if(newWindow){\n      newWindow.location.href = 'https://github.com/aldyadk/example-music-quiz-typescript'\n    }\n  }\n  return (\n    <>\n      <GlobalStyle />\n      <div className=\"App\">\n        <Wrapper>\n          <h1 className=\"green-border\">Music Quiz</h1>\n          {(gameOver || userAnswers.length === TOTAL_QUESTIONS) && (\n            <button className='start' onClick={startQuiz}>{!questions.length ? 'start' : 're-start'}</button>\n          )}\n          {!gameOver && <p className=\"score\">Score: {score}</p>}\n          {loading && <p>Loading...</p>}\n          {!loading && !gameOver && (\n            <QuestionCard\n              questionNumber={number + 1}\n              totalQuestions={TOTAL_QUESTIONS}\n              question={questions[number].question}\n              answers={questions[number].answers}\n              userAnswer={userAnswers ? userAnswers[number] : undefined}\n              cb={checkAnswer}\n            />\n          )}\n          {!loading && !gameOver && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 && (\n            <button className='next' onClick={nextQuestion}>next</button>\n          )}\n        </Wrapper>\n        <div\n          style={{\n            width: '100%',\n            whiteSpace: 'nowrap',\n            position: 'fixed',\n            bottom: 10\n          }}\n        >\n          <Marquee direction='left' scrollWhen='always' delay={0}>\n            <span style={{cursor: 'pointer'}} onClick={handleFooterClick}>\n              Aldy ADK Andika - 2021 - node - react - typescript - create-react-app - styled-components -  react-double-marquee - Aldy ADK Andika - 2021 - node - react - typescript - create-react-app - styled-components -  react-double-marquee -\n            </span>\n          </Marquee>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}